			==================================================
						Bitwise OR Operator ( | )
			==================================================
=>Syntax:		Value1 | Value2
=>The Functionality of Bitwise OR Operator ( | ) is described with following truth table.
			----------------------------------------------------------------
				Value1	Value2	    Value1 | Value2
			----------------------------------------------------------------
				0		1				1
				1		0				1
				0		0				0			
				1		1				1	
			----------------------------------------------------------------
-----------------------
Example-1
------------------------
>>> 0 | 1----------------1
>>> 1 | 0----------------1
>>> 0 | 0----------------0
>>> 1 | 1----------------1
-----------------------------
Example-2
-----------------------------
a=10---------------->0000 1010
b=4----------------->0000  0100
------------------------------------------
c=a|b--------------->0000 1110
print(c)------------->14
------------------------------------------
>>> a=10
>>> b=10
>>> print(a|b)------10
>>> 4|5----------------5
>>> 3|4----------------7
>>> 10|15------------15
------------------------------------------
Example-3
------------------------------------------
>>> s1={10,20,30}
>>> s2={15,10,25}
>>> s3=s1.union(s2)
>>> print(s3,type(s3))--------{20, 25, 10, 30, 15} <class 'set'>
------------------OR---------------
>>> s1={10,20,30}
>>> s2={15,10,25}
>>> s3=s1|s2  # Bitwise OR (|) Operator
>>> print(s3,type(s3))----------{20, 25, 10, 30, 15} <class 'set'>
>>> s1={1.2,2.3,4.5}
>>> s2={1.2,2.3,4.6}
>>> s3=s1|s2  # Bitwise OR (|) Operator
>>> print(s3,type(s3))----------{1.2, 2.3, 4.5, 4.6} <class 'set'>
>>> 1.2|2.3--------------------------TypeError: unsupported operand type(s) for |: 'float' and 'float'
----------------------------------------
>>> s1={"Python","Django"}
>>> s2={"C","HTML","C++"}
>>> s3=s1|s2   # Bitwise OR (|) Operator
>>> print(s3,type(s3))-----------{'C++', 'HTML', 'C', 'Python', 'Django'} <class 'set'>
>>> "Python"|"Java"-------------TypeError: unsupported operand type(s) for |: 'str' and 'str'
------------------------------------------------------------
>>> {1,2,3}|{3,4,5}--------------------{1, 2, 3, 4, 5}
>>>
>>> [10,20,30] | [30,40,50]-------------------TypeError: unsupported operand type(s) for |: 'list' and 'list'
>>> [10,20,30] or [30,40,50]-----------------[10, 20, 30]
>>>
>>> [] or [10]-------------------------------------[10]
>>> "MISSISSIPPI" | "MISSISSIPPI"------------TypeError: unsupported operand type(s) for |: 'str' and 'str'
>>> set("MISSISSIPPI") | set("MISSISSIPPI")--------{'I', 'M', 'S', 'P'}
>>> set([10,10,10])|set([10,20,10])---------------------{10, 20}
========================================x=============================================