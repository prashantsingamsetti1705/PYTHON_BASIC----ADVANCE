		=============================================
					Nested OR Inner tuple
		=============================================
=>The Process of Defining One tuple Inside of Another tuple is called Inner OR Nested tuple.
=>Syntax:   tplobj=(Val1,Val2......(Val11,Val12....Val-1n), (Val21,Val22,...Val-2n),....Val-n)
=>Here (Val1,Val2......,....Val-n) is called Outer tuple Eleemnts
=>Here (Val11,Val12....Val-1n) is called Inner tuple Elements
=>Here (Val21,Val22,...Val-2n) is also another Inner tuple  Elements.
=>On the Inner tuple Objects, we can also Perform Both Indexing and Slicing Operations.
=>On the Objects Inner tuple, we can apply all the Pre-defined Functions of tuple ( index(), count() )
==============================================================================
Examples:  tuple in tuple
==============================================================================
>>> t1=(10,"RS",(16,18,17),(67,80,78),"OUCET")
>>> print(t1,type(t1))-------------(10, 'RS', (16, 18, 17), (67, 80, 78), 'OUCET') <class 'tuple'>
>>> for val in t1:
...		print(val,type(val),type(t1))
...
		10 <class 'int'> <class 'tuple'>
		RS <class 'str'> <class 'tuple'>
		(16, 18, 17) <class 'tuple'> <class 'tuple'>
		(67, 80, 78) <class 'tuple'> <class 'tuple'>
		OUCET <class 'str'> <class 'tuple'>
------------------------------------------------------------------------------------------------
>>> t1=(10,"Rossum",(17,16,18),(77,78,66),"OUCET")
>>> print(t1,type(t1))------------(10, 'Rossum', (17, 16, 18), (77, 78, 66), 'OUCET') <class 'tuple'>
>>> t1[0]----------------------------10
>>> t1[1]----------------------------'Rossum'
>>> t1[2]----------------------------(17, 16, 18)
>>> t1[3]----------------------------(77, 78, 66)
>>> t1[2][1]------------------------16
>>> t1[-2][-1]----------------------66
============================================================================
Possibility 1:    List in Tuple
============================================================================
=>Syntax:   tplobj=(Val1,Val2......[Val11,Val12....Val-1n], [Val21,Val22,...Val-2n],....Val-n)

=>Here (Val1,Val2......,....Val-n) is called Outer tuple Eleemnts
=>Here [Val11,Val12....Val-1n] is called Inner list Elements
=>Here [Val21,Val22,...Val-2n] is also another Inner list  Elements.
---------------------------------------
Examples
---------------------------------------
>>> t1=(10,"Rossum",[17,16,18],[77,78,66],"OUCET")
>>> print(t1,type(t1))---------------(10, 'Rossum', [17, 16, 18], [77, 78, 66], 'OUCET') <class 'tuple'>
>>> print(t1[2],type(t1[2]))-----------[17, 16, 18] <class 'list'>
>>> print(t1[3],type(t1[3]))-----------[77, 78, 66] <class 'list'>
>>> t1[2].sort()
>>> print(t1,type(t1))------------------(10, 'Rossum', [16, 17, 18], [77, 78, 66], 'OUCET') <class 'tuple'>
>>> t1[3].sort(reverse=True)
>>> print(t1,type(t1))------------------(10, 'Rossum', [16, 17, 18], [78, 77, 66], 'OUCET') <class 'tuple'>
==============================================================================
Possibility 2:   tuple  in list
============================================================================
=>Syntax:   listobj=[Val1,Val2......(Val11,Val12....Val-1n), (Val21,Val22,...Val-2n),....Val-n]

=>Here [Val1,Val2......,....Val-n] is called Outer list Eleemnts
=>Here (Val11,Val12....Val-1n]) is called Inner tuple Elements
=>Here (Val21,Val22,...Val-2n) is also another Inner tuple  Elements.
---------------------------------------
Examples
---------------------------------------
>>> l1=[10,"Rossum",(17,16,18),(77,78,66),"OUCET"]
>>> print(l1,type(l1))-----------------[10, 'Rossum', (17, 16, 18), (77, 78, 66), 'OUCET'] <class 'list'>
>>> l1[1]---------------------------------'Rossum'
>>> print(l1[2],type(l1[2]))---------(17, 16, 18) <class 'tuple'>
>>> print(l1[3],type(l1[3]))---------(77, 78, 66) <class 'tuple'>
==================================x============================================
NOTE:
--------
=>One can define One List in another List
=>One can define One Tuple in another Tuple
=>One can define One List in another Tuple ( tuple of lists)
=>One can define One tuple in another List (list of tuples)
================================================z==============================
For More Examples
------------------------------------------------------------------------------------------------
>>> t1=(100,"RS",(18,20,19),(56,78,66),"JNTU")
>>> print(t1,type(t1))
			(100, 'RS', (18, 20, 19), (56, 78, 66), 'JNTU') <class 'tuple'>
>>> for val in t1:
...		print(val,type(val),type(t1))
...
		100 <class 'int'> <class 'tuple'>
		RS <class 'str'> <class 'tuple'>
		(18, 20, 19) <class 'tuple'> <class 'tuple'>
		(56, 78, 66) <class 'tuple'> <class 'tuple'>
		JNTU <class 'str'> <class 'tuple'>
>>> t1[2]
(18, 20, 19)
>>> t1[-2]
(56, 78, 66)
>>> t1[-2][-2]
78
>>> t1[-2][::2]
(56, 66)
>>>
-------------------------------------------------------------
>>> lst=[100,"RS",(17,20,18),(78,76,75),"OUCET"]
>>> print(lst,type(lst))
[100, 'RS', (17, 20, 18), (78, 76, 75), 'OUCET'] <class 'list'>
>>> for val in lst:
...     print(val,type(val),type(lst))
...
100 <class 'int'> <class 'list'>
RS <class 'str'> <class 'list'>
(17, 20, 18) <class 'tuple'> <class 'list'>
(78, 76, 75) <class 'tuple'> <class 'list'>
OUCET <class 'str'> <class 'list'>
>>> lst.append(("Python","C"))
>>> print(lst,type(lst))
[100, 'RS', (17, 20, 18), (78, 76, 75), 'OUCET', ('Python', 'C')] <class 'list'>
>>> lst[2]
(17, 20, 18)
>>> lst[2]=(16,19,15)
>>> print(lst,type(lst))
[100, 'RS', (16, 19, 15), (78, 76, 75), 'OUCET', ('Python', 'C')] <class 'list'>
>>> lst[-3]=(78,80,76,77)
>>> print(lst,type(lst))
[100, 'RS', (16, 19, 15), (78, 80, 76, 77), 'OUCET', ('Python', 'C')] <class 'list'>
>>> lst[3]=tuple(sorted(lst[3]))
>>> print(lst,type(lst))
[100, 'RS', (16, 19, 15), (76, 77, 78, 80), 'OUCET', ('Python', 'C')] <class 'list'>
>>> lst[2]=tuple(sorted(lst[-4])[::-1])
>>> print(lst,type(lst))
[100, 'RS', (19, 16, 15), (76, 77, 78, 80), 'OUCET', ('Python', 'C')] <class 'list'>
>>> lst.pop(3)
(76, 77, 78, 80)
>>> print(lst,type(lst))
[100, 'RS', (19, 16, 15), 'OUCET', ('Python', 'C')] <class 'list'>
>>>
-----------------------------------------------------------
>>> tpl=(10,"RS",[10,17,15],[56,78,64],"OUCET")
>>> print(tpl,type(tpl))
(10, 'RS', [10, 17, 15], [56, 78, 64], 'OUCET') <class 'tuple'>
>>> for val in tpl:
...     print(val,type(val),type(tpl))
...
10 <class 'int'> <class 'tuple'>
RS <class 'str'> <class 'tuple'>
[10, 17, 15] <class 'list'> <class 'tuple'>
[56, 78, 64] <class 'list'> <class 'tuple'>
OUCET <class 'str'> <class 'tuple'>
>>> tpl[2].sort()
>>> print(tpl,type(tpl))
(10, 'RS', [10, 15, 17], [56, 78, 64], 'OUCET') <class 'tuple'>
>>> tpl[-2].sort(reverse=True)
>>> print(tpl,type(tpl))
(10, 'RS', [10, 15, 17], [78, 64, 56], 'OUCET') <class 'tuple'>
>>> tpl[-2].append(54)
>>> print(tpl,type(tpl))
(10, 'RS', [10, 15, 17], [78, 64, 56, 54], 'OUCET') <class 'tuple'>
>>> tpl[2].remove(15)
>>> print(tpl,type(tpl))
(10, 'RS', [10, 17], [78, 64, 56, 54], 'OUCET') <class 'tuple'>
>>> del tpl[-2][1:3]
>>> print(tpl,type(tpl))
(10, 'RS', [10, 17], [78, 54], 'OUCET') <class 'tuple'>
>>> del tpl[-2][::]
>>> print(tpl,type(tpl))
(10, 'RS', [10, 17], [], 'OUCET') <class 'tuple'>
>>> tpl[-3].clear()
>>> print(tpl,type(tpl))
(10, 'RS', [], [], 'OUCET') <class 'tuple'>
==========================================================================================